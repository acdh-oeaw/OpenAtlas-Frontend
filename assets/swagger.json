{
  "openapi": "3.0.2",
  "info": {
    "title": "OpenAtlas API",
    "description": "A documentation of the OpenAtlas API",
    "contact": {
      "name": "Bernhard Koschicek",
      "email": "bernhard.koschicek@oeaw.ac.at"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.2"
  },
  "servers": [
    {
      "url": "https://demo-dev.openatlas.eu",
      "description": "Demo Server"
    },
    {
      "url": "http://openatlas.sarfstation.de",
      "description": "Bernis Development Server"
    }
  ],
  "tags": [
    {
      "name": "Entities",
      "description": "Requesting entities through different means."
    },
    {
      "name": "Nodes",
      "description": "Requesting nodes and subunits"
    },
    {
      "name": "Content",
      "description": "Requesting content of the OpenAtlas instance."
    }
  ],
  "paths": {
    "/api/0.2/class/{class_code}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Classes endpoint\r",
        "parameters": [
          {
            "name": "class_code",
            "in": "path",
            "description": "Need to be a Entity class of the CIDOC CRM (e.g. E21, E18, E33)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of geojson representation to be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "The result will sorted by the given column",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "class_code",
                "name",
                "description",
                "created",
                "modified",
                "system_type",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Result will be sorted asc/desc (by default by the name column)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specify request with custom SQL filter method",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "List of results start with given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "List of results start with entity after given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "when",
                "types",
                "relations",
                "names",
                "links",
                "geometry",
                "depictions",
                "not"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/code/{item}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Code endpoint\r",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "description": "A OA menu item e.g. actor, event, place, reference, source, object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "actor",
                "event",
                "place",
                "reference",
                "source",
                "object"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of geojson representation to be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "The result will sorted by the given column",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "class_code",
                "name",
                "description",
                "created",
                "modified",
                "system_type",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Result will be sorted asc/desc (by default by the name column)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specify request with custom SQL filter method",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "List of results start with given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "List of results start with entity after given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "when",
                "types",
                "relations",
                "names",
                "links",
                "geometry",
                "depictions",
                "not"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/content/": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Content endpoint\r",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Select output language",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "en",
                "de"
              ]
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of OA content",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/entity/{id_}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Entity endpoint\r",
        "parameters": [
          {
            "name": "id_",
            "in": "path",
            "description": "Specific entity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "when",
                "types",
                "relations",
                "names",
                "links",
                "geometry",
                "depictions",
                "not"
              ]
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoJsonModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/latest/{latest}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Latest endpoint\r",
        "parameters": [
          {
            "name": "latest",
            "in": "path",
            "description": "The amount of last enterd entities to be retrieved",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "when",
                "types",
                "relations",
                "names",
                "links",
                "geometry",
                "depictions",
                "not"
              ]
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/node_entities/{id_}": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Node endpoint\r",
        "parameters": [
          {
            "name": "id_",
            "in": "path",
            "description": "The ID of an entity, which has to be a Node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/node_entities_all/{id_}": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Node endpoint\r",
        "parameters": [
          {
            "name": "id_",
            "in": "path",
            "description": "The ID of an entity, which has to be a Node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/query/": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Query endpoint\r",
        "parameters": [
          {
            "name": "entities",
            "in": "query",
            "description": "Specific entity ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "classes",
            "in": "query",
            "description": "Need to be a Entity class of the CIDOC CRM (e.g. E21, E18, E33)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "A OA menu item e.g. actor, event, place, reference, source, object",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "actor",
                "event",
                "place",
                "reference",
                "source",
                "object"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of geojson representation to be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "The result will sorted by the given column",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "class_code",
                "name",
                "description",
                "created",
                "modified",
                "system_type",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Result will be sorted asc/desc (by default by the name column)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specify request with custom SQL filter method",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "List of results start with given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "List of results start with entity after given ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "when",
                "types",
                "relations",
                "names",
                "links",
                "geometry",
                "depictions",
                "not"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/subunit/{id_}": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Node endpoint\r",
        "parameters": [
          {
            "name": "id_",
            "in": "path",
            "description": "The ID of an entity, which has to be a Node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/0.2/subunit_hierarchy/{id_}": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Node endpoint\r",
        "parameters": [
          {
            "name": "id_",
            "in": "path",
            "description": "The ID of an entity, which has to be a Node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Returns a number which represents the total count of the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Triggers the file download of the given request",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a geojson representation of the specified entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeModel"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContentModel": {
        "type": "object",
        "properties": {
          "contact": {
            "type": "string"
          },
          "intro": {
            "type": "string"
          },
          "legal-notice": {
            "type": "string"
          }
        }
      },
      "DepictionModel": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DescriptionModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "FeatureGeoJSON": {
        "required": [
          "@id",
          "geometry",
          "type"
        ],
        "type": "object",
        "properties": {
          "@id": {
            "type": "string"
          },
          "crmClass:": {
            "type": "string"
          },
          "depictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepictionModel"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionModel"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkModel"
            }
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamesModel"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/FeatureGeoJSON_properties"
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationModel"
            }
          },
          "type": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeModel"
            }
          },
          "when": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhenModel"
            }
          }
        }
      },
      "GeoJsonModel": {
        "required": [
          "features",
          "type"
        ],
        "type": "object",
        "properties": {
          "@context": {
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureGeoJSON"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "LatestModel": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GeoJsonModel"
        }
      },
      "LinkModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "NamesModel": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "NodeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "label": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "OutputModel": {
        "type": "object",
        "properties": {
          "GeoJson": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJsonModel"
            }
          },
          "pagination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginationModel"
            }
          }
        }
      },
      "PaginationIndexModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "start_id": {
            "type": "number"
          }
        }
      },
      "PaginationModel": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "number"
          },
          "entity_per_page": {
            "type": "number"
          },
          "index": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginationIndexModel"
            }
          },
          "total_pages": {
            "type": "number"
          }
        }
      },
      "RelationModel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "relationTo": {
            "type": "string"
          },
          "relationType": {
            "type": "string"
          }
        }
      },
      "TimeDetailModel": {
        "type": "object",
        "properties": {
          "earliest": {
            "type": "string"
          },
          "latest": {
            "type": "string"
          }
        }
      },
      "TimespansModel": {
        "type": "object",
        "properties": {
          "end": {
            "$ref": "#/components/schemas/TimeDetailModel"
          },
          "first": {
            "$ref": "#/components/schemas/TimeDetailModel"
          }
        }
      },
      "TypeModel": {
        "type": "object",
        "properties": {
          "hierarchy": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "WhenModel": {
        "type": "object",
        "properties": {
          "timespans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimespansModel"
            }
          }
        }
      },
      "FeatureGeoJSON_properties": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "columnParam": {
        "name": "column",
        "in": "query",
        "description": "The result will sorted by the given column",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "id",
            "class_code",
            "name",
            "description",
            "created",
            "modified",
            "system_type",
            "begin_from",
            "begin_to",
            "end_from",
            "end_to"
          ]
        }
      },
      "countParam": {
        "name": "count",
        "in": "query",
        "description": "Returns a number which represents the total count of the result",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "downloadParam": {
        "name": "download",
        "in": "query",
        "description": "Triggers the file download of the given request",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "filterParam": {
        "name": "filter",
        "in": "query",
        "description": "Specify request with custom SQL filter method",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "firstParam": {
        "name": "first",
        "in": "query",
        "description": "List of results start with given ID",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number"
        }
      },
      "langParam": {
        "name": "language",
        "in": "query",
        "description": "Select output language",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "en",
            "de"
          ]
        }
      },
      "lastParam": {
        "name": "last",
        "in": "query",
        "description": "List of results start with entity after given ID",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of geojson representation to be returned",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number"
        }
      },
      "showParam": {
        "name": "show",
        "in": "query",
        "description": "Select which key should be shown e.g. when, types, relations, names, links, geometry, depictions, not",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "when",
            "types",
            "relations",
            "names",
            "links",
            "geometry",
            "depictions",
            "not"
          ]
        }
      },
      "sortParam": {
        "name": "sort",
        "in": "query",
        "description": "Result will be sorted asc/desc (by default by the name column)",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      }
    }
  }
}
